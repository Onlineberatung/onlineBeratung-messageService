# This file contains general application properties.
# All properties that are environment specific are in their related property file (like database login data, logging level, etc.).

# Currently active profile
spring.profiles.active=@activeSpringProfile@
spring.main.allow-bean-definition-overriding=true

# General app settings
server.port=8080

spring.mvc.locale=de_DE
spring.jackson.time-zone=Europe/Berlin

service.encryption.appkey=

# Logging: SLF4J (via Lombok)
logging.file.name=log/messageservice.log

# Keycloak
keycloakService.user.role=user
keycloakService.consultant.role=consultant
keycloakService.user.dummyPrefix=@online-beratung.de
keycloakApi.error.email=User exists with same email
keycloakApi.error.username=User exists with same username

# Rocket.Chat
rocket.chat.header.auth.token=X-Auth-Token
rocket.chat.header.user.id=X-User-Id
rocket.chat.query.param.room.id=roomId
rocket.chat.query.param.offset=offset
rocket.chat.query.param.count=count
rocket.chat.query.param.sort=sort
rocket.chat.query.param.sort.value={"ts":1}
rocket.chat.api.url=<containername>:<port>/api/v1
rocket.chat.api.get.group.message.url=${rocket.chat.api.url}/groups.messages
rocket.chat.api.send.message.url=${rocket.chat.api.url}/chat.sendMessage
rocket.chat.api.user.login=${rocket.chat.api.url}/login
rocket.chat.api.user.logout=${rocket.chat.api.url}/logout
rocket.chat.api.post.group.messages.read.url=${rocket.chat.api.url}/subscriptions.read
rocket.chat.api.get.group.info=${rocket.chat.api.url}/groups.info
rocket.technical.username=
rocket.systemuser.id=
rocket.credentialscheduler.cron=0 0 0/1 * * ?

# Springfox/API documentation
springfox.docuTitle=Caritas Online Beratung: MessageService
springfox.docuDescription=Provides a REST API service to provide user information and actions.
springfox.docuVersion=0.0.1
springfox.docuTermsUrl=
springfox.docuContactName=
springfox.docuContactUrl=
springfox.docuContactEmail=
springfox.docuLicense=Apache 2.0
springfox.docuLicenseUrl=http://www.apache.org/licenses/LICENSE-2.0.html
springfox.docuPath=/messages/docs
springfox.documentation.swagger.v2.path=${springfox.docuPath}/v2/api-docs

# UserService API
user.service.api.url=<containername>:<port>/users
user.service.api.new.message.notification=${user.service.api.url}/mails/messages/new
user.service.api.new.feedback.message.notification=${user.service.api.url}/mails/messages/feedback/new
user.service.api.liveproxy.url=<containername>:<port>

# CSRF token
csrf.header.property=
csrf.whitelist.header.property=
csrf.cookie.property=

# LIQUIBASE (LiquibaseProperties)
spring.datasource.url=jdbc:mariadb://<host>:<port>/messageservice
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB103Dialect
spring.liquibase.change-log=classpath:db/changelog/messageservice-local-master.xml
spring.liquibase.user=
spring.liquibase.password=
spring.liquibase.default-schema=messageservice

# RabbitMQ
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=
spring.rabbitmq.password=

# Statistics
statistics.enabled=false
statistics.rabbitmq.exchange.name=statistics.topic

multitenancy.enabled=false
tenant.service.api.url=

cache.tenant.configuration.maxEntriesLocalHeap=100
cache.tenant.configuration.eternal=false
cache.tenant.configuration.timeToIdleSeconds=0
cache.tenant.configuration.timeToLiveSeconds=86400
feature.multitenancy.with.single.domain.enabled=false


management.endpoint.health.enabled=true
management.endpoint.health.show-details=never
management.endpoints.web.exposure.include=health
management.health.probes.enabled=true